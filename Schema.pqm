let
    ReferenceType = type [#"id" = text, #"name" = text],
    AccountType = type [
        #"id" = text,
        #"name" = text,
        #"accountId" = text,
        #"source" = ReferenceType,
        #"disabled" = logical,
        #"locked" = logical,
        #"privileged" = logical,
        #"manuallyCorrelated" = logical,
        #"created" = datetimezone,
        #"supportsPasswordChange" = logical,
        #"entitlementAttributes" = {record},
        #"accountAttributes" = record
    ],
    AccessType = type [
        #"id" = text,
        #"name" = text,
        #"displayName" = text,
        #"type" = text,
        #"enabled" = logical,
        #"requestable" = logical,
        #"requestCommentsRequired" = logical,
        #"source" = ReferenceType,
        #"disabled" = logical,
        #"privileged" = logical,
        #"attribute" = text,
        #"value" = text,
        #"standalone" = logical,
        #"cloudEligible" = logical,
        #"cloudGoverned" = logical,
        #"schema" = text
    ],
    OwnsType = type [
        #"sources" = {ReferenceType},
        #"apps" = {ReferenceType},
        #"accessProfiles" = {ReferenceType},
        #"roles" = {ReferenceType},
        #"governanceGroups" = {ReferenceType}
    ],
    IdentityType = type table [
        #"name" = text,
        #"firstName" = text,
        #"lastName" = text,
        #"displayName" = text,
        #"id" = text,
        #"email" = text,
        #"created" = datetimezone,
        #"phone" = text,
        #"inactive" = logical,
        #"protected" = logical,
        #"status" = text,
        #"isManager" = logical,
        #"identityProfile" = ReferenceType,
        #"source" = ReferenceType,
        #"attributes" = record,
        #"disabled" = logical,
        #"locked" = logical,
        #"accounts" = {AccountType},
        #"accountCount" = number,
        #"appCount" = number,
        #"access" = {AccessType},
        #"accessCount" = number,
        #"accessProfileCount" = number,
        #"entitlementCount" = number,
        #"roleCount" = number,
        #"owns" = OwnsType,
        #"modified" = datetimezone,
        #"visibleSegmentCount" = number,
        #"tagCount" = number,
        #"pod" = text,
        #"org" = text,
        #"synced" = text
    ],
    OwnerType = type [#"email" = nullable text, #"type" = text, #"id" = text, #"name" = text],
    RoleType = type table [
        #"id" = text,
        #"name" = text,
        #"accessProfiles" = {ReferenceType},
        #"accessProfileCount" = number,
        #"segmentCount" = number,
        #"entitlementCount" = number,
        #"description" = text,
        #"created" = datetimezone,
        #"modified" = datetimezone,
        #"synced" = datetimezone,
        #"enabled" = logical,
        #"requestable" = logical,
        #"requestCommentsRequired" = logical,
        #"owner" = nullable OwnerType,
        #"pod" = text,
        #"org" = text
    ],
    AccessProfileEntitlementType = type [
        #"hasPermissions" = logical,
        #"attribute" = text,
        #"value" = text,
        #"schema" = text,
        #"privileged" = logical,
        #"id" = text,
        #"name" = text
    ],
    AccessProfileType = type table [
        #"source" = ReferenceType,
        #"entitlements" = {AccessProfileEntitlementType},
        #"entitlementCount" = number,
        #"segmentCount" = number,
        #"description" = text,
        #"created" = datetimezone,
        #"modified" = datetimezone,
        #"synced" = datetimezone,
        #"enabled" = logical,
        #"requestable" = logical,
        #"requestCommentsRequired" = logical,
        #"owner" = OwnerType,
        #"id" = text,
        #"name" = text,
        #"pod" = text,
        #"org" = text
    ],
    EntitlementType = type table [
        #"modified" = datetimezone,
        #"synced" = datetimezone,
        #"displayName" = text,
        #"source" = ReferenceType,
        #"segmentCount" = number,
        #"requestable" = logical,
        #"cloudGoverned" = logical,
        #"created" = datetimezone,
        #"attribute" = text,
        #"value" = text,
        #"schema" = text,
        #"privileged" = logical,
        #"id" = text,
        #"name" = text,
        #"pod" = text,
        #"org" = text
    ],
    EventType = type table [
        #"org" = text,
        #"pod" = text,
        #"created" = datetimezone,
        #"id" = text,
        #"action" = text,
        #"type" = text,
        #"actor" = [#"name" = text],
        #"target" = [#"name" = text],
        #"stack" = text,
        #"trackingNumber" = text,
        #"attributes" = record,
        #"objects" = {text},
        #"operation" = text,
        #"status" = text,
        #"technicalName" = text,
        #"name" = text,
        #"synced" = datetimezone
    ],
    AccountActivityType = type table [
        #"org" = text,
        #"pod" = text,
        #"created" = datetimezone,
        #"id" = text,
        #"action" = text,
        #"type" = text,
        #"actor" = [#"name" = text],
        #"target" = [#"name" = text],
        #"stack" = text,
        #"trackingNumber" = text,
        #"attributes" = record,
        #"objects" = {text},
        #"operation" = text,
        #"status" = text,
        #"technicalName" = text,
        #"name" = text
    ],
    OutlierType = type table [
        id = text,
        identityId = text,
        #"type" = text,
        firstDetectionDate = datetimezone,
        latestDetectionDate = datetimezone,
        ignored = logical,
        attributes = record,
        score = number,
        unignoreType = text,
        unignoreDate = datetimezone,
        ignoreDate = datetimezone
    ],
    RoleMiningSessionType = type table [
        #"id" = text,
        #"name" = nullable text,
        #"scope" = [#"identityIds" = {text}, #"criteria" = nullable text, #"attributeFilterCriteria" = nullable record],
        #"pruneThreshold" = nullable number,
        #"minNumIdentitiesInPotentialRole" = nullable number,
        #"type" = text,
        #"saved" = logical,
        #"state" = text,
        #"scopingMethod" = text
    ],
    PotentialRoleSummaryType = type table [
        #"id" = text,
        #"name" = text,
        #"identityCount" = number,
        #"entitlementCount" = number,
        #"identityGroupStatus" = text,
        #"provisionState" = text,
        #"roleId" = nullable text,
        #"density" = number,
        #"freshness" = number,
        #"quality" = number,
        #"type" = text,
        #"createdDate" = datetimezone,
        #"saved" = logical,
        #"description" = nullable text,
        #"identityIds" = {text}
    ]
in
    [
        AccessProfileType = AccessProfileType,
        AccountActivityType = AccountActivityType,
        EventType = EventType,
        EntitlementType = EntitlementType,
        IdentityType = IdentityType,
        RoleType = RoleType,
        OutlierType = OutlierType,
        RoleMiningSessionType = RoleMiningSessionType,
        PotentialRoleSummaryType = PotentialRoleSummaryType
    ]
